/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JavaPRJ;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author USER
 */
public class QLHoaDon extends javax.swing.JFrame {

    /**
     * Creates new form QLHoaDon
     */
    public QLHoaDon() {
        initComponents();
        xuatDanhSachHoaDon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblQLHD = new javax.swing.JLabel();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbQLHD = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tfTimKiem = new javax.swing.JTextField();
        btnXemCTHD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý Hóa Đơn");

        lblQLHD.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        lblQLHD.setForeground(new java.awt.Color(0, 0, 255));
        lblQLHD.setText("QUẢN LÝ HÓA ĐƠN");

        btnXoa.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JavaPRJ/icoin/clear.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThoat.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JavaPRJ/icoin/cancel (1).png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jtbQLHD.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jtbQLHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "Mã Khách Hàng", "Mã Nhân Viên", "Ngày Lập HD", "Tổng Tiền"
            }
        ));
        jtbQLHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbQLHDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbQLHD);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setText("Tìm Kiếm");

        tfTimKiem.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tfTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTimKiemActionPerformed(evt);
            }
        });
        tfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfTimKiemKeyReleased(evt);
            }
        });

        btnXemCTHD.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btnXemCTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JavaPRJ/icoin/Iconic_e074(0)_32.png"))); // NOI18N
        btnXemCTHD.setText("Xem chi tiết HD");
        btnXemCTHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemCTHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(lblQLHD)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(48, 48, 48)
                            .addComponent(tfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnXemCTHD)
                            .addGap(57, 57, 57)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(255, 255, 255)
                            .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblQLHD)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThoat)
                    .addComponent(btnXemCTHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int i = jtbQLHD.getSelectedRow();
        TableModel model = jtbQLHD.getModel();
        String sql = "DELETE FROM `hoadon` WHERE `maHD` = '"+model.getValueAt(i, 0).toString()+"'";
        excuteQuery(sql, "được xóa");
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        Admin admin = new Admin();
        admin.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void jtbQLHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbQLHDMouseClicked

    }//GEN-LAST:event_jtbQLHDMouseClicked

    private void btnXemCTHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemCTHDActionPerformed
        int i = jtbQLHD.getSelectedRow();
        TableModel model = jtbQLHD.getModel();
        QLChiTietHD qlcthd = new QLChiTietHD();
        qlcthd.tfMaHD.setText(model.getValueAt(i, 0).toString());
        qlcthd.tfNgayBan.setText(model.getValueAt(i, 3).toString());
        qlcthd.tfMaNV.setText(model.getValueAt(i, 2).toString());
        qlcthd.tfMaKH.setText(model.getValueAt(i, 1).toString());
        qlcthd.tfTongTien.setText(model.getValueAt(i, 4).toString());
        qlcthd.setVisible(true);
        this.setVisible(false);
        
        Connection conn = getConnection();
        PreparedStatement ps = null;
        PreparedStatement ps1 = null;
        ResultSet rs = null;
        ResultSet rs1 = null;
        
        try {
            String sql = "SELECT * FROM `nhanvien` WHERE `maNV` = ? ";
            ps = conn.prepareStatement(sql);
            ps.setString(1, qlcthd.tfMaNV.getText());
            rs = ps.executeQuery();
            while(rs.next()) {
                qlcthd.tfMaNV.setText(rs.getString("maNV"));
                qlcthd.tfTenNV.setText(rs.getString("tenNV"));
            }
            
            String sql1 = "SELECT * FROM khachhang WHERE maKH = ?";
            ps1 = conn.prepareStatement(sql1);
            ps1.setString(1, qlcthd.tfMaKH.getText());
            rs1 = ps1.executeQuery();
            while(rs1.next()) {
                qlcthd.tfMaKH.setText(rs1.getString("maKH"));
                qlcthd.tfTenKH.setText(rs1.getString("tenKH"));
                qlcthd.tfDiaChi.setText(rs1.getString("diaChi"));
                qlcthd.tfSoDT.setText(rs1.getString("soDT"));
            }
            qlcthd.xuatDanhSachHangHoa();
        } catch (SQLException ex) {
            Logger.getLogger(QLHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }


        
    }//GEN-LAST:event_btnXemCTHDActionPerformed

    private void timKiem(String query) {
        DefaultTableModel model = (DefaultTableModel) jtbQLHD.getModel();
        TableRowSorter<DefaultTableModel> tr =  new TableRowSorter<DefaultTableModel>(model);
        jtbQLHD.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
        
    private void tfTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTimKiemActionPerformed

    }//GEN-LAST:event_tfTimKiemActionPerformed

    private void tfTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTimKiemKeyReleased
        String query = tfTimKiem.getText().toLowerCase();
        timKiem(query); 
    }//GEN-LAST:event_tfTimKiemKeyReleased


    public Connection getConnection() {
        Connection conn;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_projectjava?useUnicode=yes&characterEncoding=UTF-8", "root", "");
            return conn;
            
        } catch (SQLException ex) {
            Logger.getLogger(QLHoaDon.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }
    
    public ArrayList<HoaDon> getdanhSachHD() {
        ArrayList<HoaDon> dshd = new ArrayList<HoaDon>();
        Connection connection = getConnection();
        String sql = "SELECT * FROM `hoadon`";
        Statement st;
        ResultSet rs;
        

        try {
            st = connection.createStatement();
            rs = st.executeQuery(sql);
            HoaDon hd;
            while(rs.next()) {
                hd = new HoaDon(rs.getString("maHD"),rs.getString("maKH"),rs.getString("maNV"),rs.getString("ngayLap"),rs.getDouble("tongTien"));
                dshd.add(hd);
            }
        } catch (SQLException ex) {
            Logger.getLogger(QLHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dshd;
    }
      
    //Hàm thực thi các câu truy vấn
    public void excuteQuery(String sql , String message) {
        Connection conn = getConnection();
        Statement st;
        try {
            st = conn.createStatement();
            if(st.executeUpdate(sql) == 1) {
                //Xuất lại jtable sau khi thực hiện truy vấn thành công
                DefaultTableModel model = (DefaultTableModel) jtbQLHD.getModel();
                model.setRowCount(0);
                xuatDanhSachHoaDon();
                JOptionPane.showMessageDialog(rootPane, "Hóa Đơn " + message + " thành công");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Hóa Đơn không " + message);
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        }
    }
        public void xuatDanhSachHoaDon() {
        ArrayList<HoaDon> list = getdanhSachHD();
        DefaultTableModel model = (DefaultTableModel) jtbQLHD.getModel();
        Object[] row = new Object[5];
        for(int i = 0 ; i < list.size(); i++) {
            row[0] = list.get(i).getMaHD();
            row[1] = list.get(i).getMaKH();
            row[2] = list.get(i).getMaNV();
            row[3] = list.get(i).getNgayLap();
            row[4] = list.get(i).getTongTien();
            model.addRow(row);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLHoaDon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXemCTHD;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbQLHD;
    private javax.swing.JLabel lblQLHD;
    private javax.swing.JTextField tfTimKiem;
    // End of variables declaration//GEN-END:variables
}
