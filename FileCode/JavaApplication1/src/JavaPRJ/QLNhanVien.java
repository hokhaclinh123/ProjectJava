/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JavaPRJ;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import sun.java2d.pipe.SpanShapeRenderer;

/**
 *
 * @author USER
 */
public class QLNhanVien extends javax.swing.JFrame {

    /**
     * Creates new form QLNhanVien
     */
    public QLNhanVien() {
        initComponents();
        xuatDanhSachNhanVien();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbQLNV = new javax.swing.JTable();
        lblTieuDe = new javax.swing.JLabel();
        lblMaNV = new javax.swing.JLabel();
        tfMaNV = new javax.swing.JTextField();
        lblTenNV = new javax.swing.JLabel();
        tfTenNV = new javax.swing.JTextField();
        lblMatKhau = new javax.swing.JLabel();
        tfMatKhau = new javax.swing.JTextField();
        lblGioiTinh = new javax.swing.JLabel();
        rdbNam = new javax.swing.JRadioButton();
        rdbNu = new javax.swing.JRadioButton();
        lblDiaChi = new javax.swing.JLabel();
        tfDiaChi = new javax.swing.JTextField();
        lblDiaChi1 = new javax.swing.JLabel();
        tfSDT = new javax.swing.JTextField();
        lblDiaChi2 = new javax.swing.JLabel();
        dcNgaySinh = new com.toedter.calendar.JDateChooser();
        lblQuyen = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnResert = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfTimKiem = new javax.swing.JTextField();
        cboPhanQuyen = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý Nhân Viên");

        jtbQLNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV", "Tên NV", "Mật Khẩu", "Giới Tính", "Địa Chỉ", "SĐT", "Ngày Sinh", "Quyền"
            }
        ));
        jtbQLNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbQLNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbQLNV);

        lblTieuDe.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(0, 51, 255));
        lblTieuDe.setText("DATLINH STORE");

        lblMaNV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblMaNV.setText("Mã nhân viên");

        tfMaNV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tfMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMaNVActionPerformed(evt);
            }
        });

        lblTenNV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTenNV.setText("Tên nhân viên");

        tfTenNV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lblMatKhau.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblMatKhau.setText("Mật khẩu");

        tfMatKhau.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lblGioiTinh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblGioiTinh.setText("Giới tính");

        rdbNam.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rdbNam.setText("Nam");
        rdbNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbNamActionPerformed(evt);
            }
        });

        rdbNu.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rdbNu.setText("Nữ");
        rdbNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbNuActionPerformed(evt);
            }
        });

        lblDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDiaChi.setText("Địa chỉ");

        tfDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tfDiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDiaChiActionPerformed(evt);
            }
        });

        lblDiaChi1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDiaChi1.setText("Số điện thoại");

        tfSDT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lblDiaChi2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDiaChi2.setText("Ngày sinh");

        dcNgaySinh.setToolTipText("");
        dcNgaySinh.setDateFormatString("dd/MM/yyyy");
        dcNgaySinh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lblQuyen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblQuyen.setText("Quyền");

        btnThem.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JavaPRJ/icoin/plus.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JavaPRJ/icoin/edit (1).png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JavaPRJ/icoin/clear.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnResert.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnResert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JavaPRJ/icoin/refresh.png"))); // NOI18N
        btnResert.setText("Tạo lại");
        btnResert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResertActionPerformed(evt);
            }
        });

        btnThoat.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JavaPRJ/icoin/cancel (1).png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Tìm Kiếm");

        tfTimKiem.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tfTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTimKiemActionPerformed(evt);
            }
        });
        tfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTimKiemKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfTimKiemKeyReleased(evt);
            }
        });

        cboPhanQuyen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cboPhanQuyen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NHANVIEN", "ADMIN" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(374, 374, 374)
                .addComponent(lblTieuDe)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblMaNV)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tfMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblTenNV)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblMatKhau)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(lblGioiTinh)
                                                .addGap(53, 53, 53)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(rdbNam)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(rdbNu))
                                            .addComponent(tfMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(176, 176, 176)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDiaChi1)
                                    .addComponent(lblDiaChi2)
                                    .addComponent(lblQuyen)
                                    .addComponent(lblDiaChi)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(tfSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(dcNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboPhanQuyen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(28, 28, 28)
                                .addComponent(tfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnResert, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(74, 74, 74)
                                    .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 59, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTieuDe)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaNV)
                    .addComponent(tfMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiaChi)
                    .addComponent(tfDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDiaChi1)
                            .addComponent(tfSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDiaChi2)
                            .addComponent(dcNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblQuyen)
                            .addComponent(cboPhanQuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenNV)
                            .addComponent(tfTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMatKhau)
                            .addComponent(tfMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGioiTinh)
                            .addComponent(rdbNam)
                            .addComponent(rdbNu))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThoat)
                            .addComponent(btnXoa))
                        .addComponent(btnResert, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMaNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMaNVActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        String sql = "DELETE FROM `nhanvien` WHERE `maNV` = '" + tfMaNV.getText() + "'";
        excuteQuery(sql, "đã xóa");
        resetText();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tfDiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDiaChiActionPerformed

    private void timKiem(String query) {
        DefaultTableModel model = (DefaultTableModel) jtbQLNV.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jtbQLNV.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    private void jtbQLNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbQLNVMouseClicked
        //Xuất dòng được chọn ra các textfield
        int i = jtbQLNV.getSelectedRow();
        TableModel model = jtbQLNV.getModel();
        tfMaNV.setText(model.getValueAt(i, 0).toString());
        tfTenNV.setText(model.getValueAt(i, 1).toString());
        tfMatKhau.setText(model.getValueAt(i, 2).toString());
        if ("Nam".equals(model.getValueAt(i, 3).toString())) {
            rdbNam.setSelected(true);
            rdbNu.setSelected(false);
        } else {
            rdbNu.setSelected(true);
            rdbNam.setSelected(false);
        }
        tfDiaChi.setText(model.getValueAt(i, 4).toString());
        tfSDT.setText(model.getValueAt(i, 5).toString());
        cboPhanQuyen.setSelectedItem(model.getValueAt(i, 7).toString());
        try {
            Date date = new SimpleDateFormat("dd/MM/yyyy").parse((String) model.getValueAt(i, 6).toString());
            dcNgaySinh.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(QLNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jtbQLNVMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

            String gioiTinh = "";
            if (rdbNam.isSelected() == true) {
                gioiTinh = "Nam";
            } else {
                gioiTinh = "Nữ";
            }
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            String date = dateFormat.format(dcNgaySinh.getDate());
            String quyen = "NHANVIEN";
            String sql = "INSERT INTO `nhanvien`(`maNV`, `tenNV`, `matKhau`, `gioiTinh`, `diaChi`, `soDT`, `ngaySinh`, `phanQuyen`) "
                    + "VALUES ('" + tfMaNV.getText() + "','" + tfTenNV.getText() + "','" + tfMatKhau.getText() + "','" + gioiTinh + "','" + tfDiaChi.getText() + "','"
                    + tfSDT.getText() + "','" + date + "','" + quyen + "')";
            excuteQuery(sql, "đã thêm");

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        String gioiTinh = "";
        if (rdbNam.isSelected() == true) {
            gioiTinh = "Nam";
        } else {
            gioiTinh = "Nữ";
        }
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            String date = dateFormat.format(dcNgaySinh.getDate());
            String sql = "UPDATE `nhanvien` SET `tenNV`='" + tfTenNV.getText() + "',`matKhau`='" + tfMatKhau.getText() + "',`gioiTinh`='" + gioiTinh
                    + "',`diaChi`='" + tfDiaChi.getText() + "',`soDT`='" + tfSDT.getText() + "',`ngaySinh`='" + date + "',`phanQuyen`='" + cboPhanQuyen.getSelectedItem().toString() + "' WHERE `maNV`='" + tfMaNV.getText() + "'";
            excuteQuery(sql, "đã sửa");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "No data selected");
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void rdbNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbNamActionPerformed
        if (rdbNam.isSelected() == true) {
            rdbNam.setSelected(true);
            rdbNu.setSelected(false);
        }
    }//GEN-LAST:event_rdbNamActionPerformed

    private void rdbNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbNuActionPerformed
        if (rdbNu.isSelected() == true) {
            rdbNam.setSelected(false);
            rdbNu.setSelected(true);
        }
    }//GEN-LAST:event_rdbNuActionPerformed

    private void btnResertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResertActionPerformed
        resetText();
    }//GEN-LAST:event_btnResertActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        Admin admin = new Admin();
        admin.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void tfTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTimKiemKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTimKiemKeyPressed

    private void tfTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTimKiemKeyReleased
        String query = tfTimKiem.getText().toLowerCase();
        timKiem(query);

    }//GEN-LAST:event_tfTimKiemKeyReleased

    private void tfTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTimKiemActionPerformed

    public void resetText() {
        tfMaNV.setText("");
        tfTenNV.setText("");
        tfMatKhau.setText("");
        rdbNam.setSelected(false);
        rdbNu.setSelected(false);
        tfDiaChi.setText("");
        tfSDT.setText("");
        dcNgaySinh.setCalendar(null);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLNhanVien().setVisible(true);
            }
        });
    }

    public Connection getConnection() {
        Connection conn;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_projectjava?useUnicode=yes&characterEncoding=UTF-8", "root", "");
            return conn;

        } catch (SQLException ex) {
            Logger.getLogger(QLNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }

    public ArrayList<NhanVien> getdanhSachNV() {
        ArrayList<NhanVien> dsnv = new ArrayList<NhanVien>();
        Connection connection = getConnection();

        String sql = "SELECT * FROM `nhanvien` WHERE `phanQuyen` = 'NHANVIEN'";
        Statement st;
        ResultSet rs;

        try {
            st = connection.createStatement();
            rs = st.executeQuery(sql);
            NhanVien nv;
            while (rs.next()) {
                nv = new NhanVien(rs.getString("maNV"), rs.getString("tenNV"), rs.getString("matKhau"), rs.getString("gioiTinh"),
                        rs.getString("diaChi"), rs.getString("soDT"), rs.getString("ngaySinh"), rs.getString("phanQuyen"));
                dsnv.add(nv);
            }
        } catch (SQLException ex) {
            Logger.getLogger(QLNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dsnv;
    }

    public void xuatDanhSachNhanVien() {
        ArrayList<NhanVien> list = getdanhSachNV();
        DefaultTableModel model = (DefaultTableModel) jtbQLNV.getModel();
        Object[] row = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMaNV();
            row[1] = list.get(i).getTenNV();
            row[2] = list.get(i).getMatKhau();
            row[3] = list.get(i).getGioiTinh();
            row[4] = list.get(i).getDiaChi();
            row[5] = list.get(i).getSoDT();
            row[6] = list.get(i).getNgaySinh();
            row[7] = list.get(i).getPhanQuyen();

            model.addRow(row);

        }
    }

    //Hàm thực thi các câu truy vấn
    public void excuteQuery(String sql, String message) {
        Connection conn = getConnection();
        Statement st;
        try {
            st = conn.createStatement();
            if (st.executeUpdate(sql) == 1) {
                //Xuất lại jtable sau khi thực hiện truy vấn thành công
                DefaultTableModel model = (DefaultTableModel) jtbQLNV.getModel();
                model.setRowCount(0);
                xuatDanhSachNhanVien();
                JOptionPane.showMessageDialog(rootPane, "Nhân viên " + message + " thành công");
            } else {
                JOptionPane.showMessageDialog(rootPane, "nhân viên không " + message);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResert;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox cboPhanQuyen;
    private com.toedter.calendar.JDateChooser dcNgaySinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbQLNV;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblDiaChi1;
    private javax.swing.JLabel lblDiaChi2;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JLabel lblQuyen;
    private javax.swing.JLabel lblTenNV;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JRadioButton rdbNam;
    private javax.swing.JRadioButton rdbNu;
    private javax.swing.JTextField tfDiaChi;
    private javax.swing.JTextField tfMaNV;
    private javax.swing.JTextField tfMatKhau;
    private javax.swing.JTextField tfSDT;
    private javax.swing.JTextField tfTenNV;
    private javax.swing.JTextField tfTimKiem;
    // End of variables declaration//GEN-END:variables
}
